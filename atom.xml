<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>doggie&#39;s home</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-06-14T02:57:24.568Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>QtEnv</title>
    <link href="http://example.com/2025/06/14/QtEnv/"/>
    <id>http://example.com/2025/06/14/QtEnv/</id>
    <published>2025-06-14T02:28:35.000Z</published>
    <updated>2025-06-14T02:57:24.568Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="环境前提"><a href="#环境前提" class="headerlink" title="环境前提"></a>环境前提</h3><ul><li>win11环境</li><li>正常安装vscode，已经C++ CMake等一些列插件</li><li>已经根据<a href="https://github.com/parallel101/qtguide">小彭老师的QT安装过程</a>安装了Qt</li><li>在环境变量中额外添加以下设置:<ul><li>Path: D:\Qt\Qt5.12.12\5.12.12\mingw73_64\bin, D:\Qt\Qt5.12.12\5.12.12\mingw73_64, D:\Qt\Qt5.12.12\Tools\mingw730_64\bin, D:\Qt\Qt5.12.12\Tools\QtCreator\bin</li><li>QT_PLUGIN_PATH: D:\Qt\Qt5.12.12\5.12.12\mingw73_64\plugins</li><li>Qt5_DIR: D:\Qt\Qt5.12.12\5.12.12\mingw73_64\lib\cmake</li></ul></li></ul><h3 id="使用习惯"><a href="#使用习惯" class="headerlink" title="使用习惯"></a>使用习惯</h3><p>不同于QCreator比较笨重但全面的使用方式，该方式只是使用CMake来链接Qt函数库来组织代码，比较轻量，因此只需要在程序代码组织块中加入头文件，在CMakeLists.txt中构建即可</p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><ol><li><p>参考小彭老师的Qt设置，Make一般可以设置为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">在本电脑配置下的cmake使用方法</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cmake_minimum_required(VERSION 3.12)</span><br><span class="line">set(CMAKE_CXX_STANDARD 20)</span><br><span class="line">set(CMAKE_AUTOMOC ON)</span><br><span class="line">set(CMAKE_AUTORCC ON)</span><br><span class="line">set(CMAKE_AUTOUIC ON)</span><br><span class="line"></span><br><span class="line"># set (CMAKE_C_COMPILER &quot;D:/mingw64/bin/gcc.exe&quot;)</span><br><span class="line"># set (CMAKE_CXX_COMPILER &quot;D:/mingw64/bin/g++.exe&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># cmake  make和build方法</span><br><span class="line"># 最推荐的方法</span><br><span class="line"># 1.</span><br><span class="line"># 在vscode指定的cmake Launch工具下竟然可以运行</span><br><span class="line"></span><br><span class="line"># 2.</span><br><span class="line"># 根据1.方法的output窗口命令输出执行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 3.</span><br><span class="line"># cmake -B build -G &quot;MinGW Makefiles&quot;</span><br><span class="line"># cmake --build build</span><br><span class="line"># 但是会连接不了qt库</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 代码调试</span><br><span class="line"># 经过方法一和方法二生成的./build/*.exe文件可以用gdb调试</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if (WIN32)</span><br><span class="line">    add_compile_definitions(NOMINMAX _USE_MATH_DEFINES)</span><br><span class="line">endif()</span><br><span class="line"></span><br><span class="line">if (MSVC)</span><br><span class="line">    message(&quot;using MSVC&quot;)</span><br><span class="line">    add_compile_options(-Zc:preprocessor -utf-8 -EHsc -bigobj)</span><br><span class="line">else()</span><br><span class="line">    message(&quot;using others&quot;)</span><br><span class="line">    if (WIN32)</span><br><span class="line">        add_compile_options(-finput-charset=utf-8 -fexec-charset=utf-8)</span><br><span class="line">    endif()</span><br><span class="line">    add_compile_options(-Wall -Wextra -Werror=return-type)</span><br><span class="line">endif()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">project(01_9x9_table)</span><br><span class="line">find_package(Qt5 REQUIRED COMPONENTS Core Widgets REQUIRED)</span><br><span class="line"></span><br><span class="line">file(GLOB sources *.cpp)</span><br><span class="line">add_executable(01_9x9_table $&#123;sources&#125;)</span><br><span class="line">target_link_libraries(01_9x9_table PRIVATE Qt5::Core Qt5::Widgets)</span><br></pre></td></tr></table></figure></li><li><p>加入头文件提示<br>在设置中搜索关键字Include Path，添加头文件搜索路径&#x2F;Qt&#x2F;Qt5.12.12&#x2F;5.12.12&#x2F;mingw73_64&#x2F;**</p></li><li><p>CMake构建<br>直接在CMakeLists.txt文件下使用CMake Launch按钮构建即可<br>默认会生成Debug符号，如果不能Debug，可以在CMake插件中修改，或者直接使用命令行加入-DCMAKE_BUILD_TYPE:STRING&#x3D;Debug，当然可以根据CMake构建按钮学习生成命令</p></li><li><p>调试<br>直接使用gdb调试CMake生成的.exe文件，自己打断点</p></li><li><p>缺点<br>这一套使用方式符合cpp的工具链开发习惯，但是相比QCreator，这一套能从函数库中看到函数原型，只能看到头文件声明</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Qt" scheme="http://example.com/tags/Qt/"/>
    
      <category term="Env setting" scheme="http://example.com/tags/Env-setting/"/>
    
  </entry>
  
  <entry>
    <title>Introduce</title>
    <link href="http://example.com/2024/03/30/introduce/"/>
    <id>http://example.com/2024/03/30/introduce/</id>
    <published>2024-03-30T01:55:56.000Z</published>
    <updated>2025-06-14T02:21:19.552Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong><big>Welcome to doggie’s channel~ ^_^</big></strong></p><h3 id="The-programe-languages-I-have-learned"><a href="#The-programe-languages-I-have-learned" class="headerlink" title="The programe languages I have learned:"></a>The programe languages I have learned:</h3><ul><li>C</li><li>CPP</li><li>Go</li><li>Python</li><li>Rust</li><li>Java</li><li>html, css, javascript</li></ul><h3 id="My-Interests"><a href="#My-Interests" class="headerlink" title="My Interests:"></a>My Interests:</h3><ul><li>Linux programming and kernel learning</li><li>microservice</li><li>database learning</li><li>embedding system development</li></ul><h3 id="I-would-share-my-computer-learning-notes-and-my-working-experience"><a href="#I-would-share-my-computer-learning-notes-and-my-working-experience" class="headerlink" title="I would share my computer learning notes and my working experience."></a>I would share my computer learning notes and my working experience.</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="introduce" scheme="http://example.com/tags/introduce/"/>
    
  </entry>
  
</feed>
