{"pages":[],"posts":[{"title":"Introduce","text":"Welcome to doggie’s channel~ ^_^ The programe languages I have learned: C CPP Go Python Rust Java html, css, javascript My Interests: Linux programming and kernel learning microservice database learning embedding system development I would share my computer learning notes and my working experience.","link":"/2024/03/30/introduce/"},{"title":"QtEnv","text":"环境前提 win11环境 正常安装vscode，已经C++ CMake等一些列插件 已经根据小彭老师的QT安装过程安装了Qt 在环境变量中额外添加以下设置: Path: D:\\Qt\\Qt5.12.12\\5.12.12\\mingw73_64\\bin, D:\\Qt\\Qt5.12.12\\5.12.12\\mingw73_64, D:\\Qt\\Qt5.12.12\\Tools\\mingw730_64\\bin, D:\\Qt\\Qt5.12.12\\Tools\\QtCreator\\bin QT_PLUGIN_PATH: D:\\Qt\\Qt5.12.12\\5.12.12\\mingw73_64\\plugins Qt5_DIR: D:\\Qt\\Qt5.12.12\\5.12.12\\mingw73_64\\lib\\cmake 使用习惯不同于QCreator比较笨重但全面的使用方式，该方式只是使用CMake来链接Qt函数库来组织代码，比较轻量，因此只需要在程序代码组织块中加入头文件，在CMakeLists.txt中构建即可 使用方法 参考小彭老师的Qt设置，Make一般可以设置为 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556在本电脑配置下的cmake使用方法cmake_minimum_required(VERSION 3.12)set(CMAKE_CXX_STANDARD 20)set(CMAKE_AUTOMOC ON)set(CMAKE_AUTORCC ON)set(CMAKE_AUTOUIC ON)# set (CMAKE_C_COMPILER &quot;D:/mingw64/bin/gcc.exe&quot;)# set (CMAKE_CXX_COMPILER &quot;D:/mingw64/bin/g++.exe&quot;)# cmake make和build方法# 最推荐的方法# 1.# 在vscode指定的cmake Launch工具下竟然可以运行# 2.# 根据1.方法的output窗口命令输出执行# 3.# cmake -B build -G &quot;MinGW Makefiles&quot;# cmake --build build# 但是会连接不了qt库# 代码调试# 经过方法一和方法二生成的./build/*.exe文件可以用gdb调试if (WIN32) add_compile_definitions(NOMINMAX _USE_MATH_DEFINES)endif()if (MSVC) message(&quot;using MSVC&quot;) add_compile_options(-Zc:preprocessor -utf-8 -EHsc -bigobj)else() message(&quot;using others&quot;) if (WIN32) add_compile_options(-finput-charset=utf-8 -fexec-charset=utf-8) endif() add_compile_options(-Wall -Wextra -Werror=return-type)endif()project(01_9x9_table)find_package(Qt5 REQUIRED COMPONENTS Core Widgets REQUIRED)file(GLOB sources *.cpp)add_executable(01_9x9_table ${sources})target_link_libraries(01_9x9_table PRIVATE Qt5::Core Qt5::Widgets) 加入头文件提示在设置中搜索关键字Include Path，添加头文件搜索路径/Qt/Qt5.12.12/5.12.12/mingw73_64/** CMake构建直接在CMakeLists.txt文件下使用CMake Launch按钮构建即可默认会生成Debug符号，如果不能Debug，可以在CMake插件中修改，或者直接使用命令行加入-DCMAKE_BUILD_TYPE:STRING=Debug，当然可以根据CMake构建按钮学习生成命令 调试直接使用gdb调试CMake生成的.exe文件，自己打断点 缺点这一套使用方式符合cpp的工具链开发习惯，但是相比QCreator，这一套能从函数库中看到函数原型，只能看到头文件声明","link":"/2025/06/14/QtEnv/"}],"tags":[{"name":"introduce","slug":"introduce","link":"/tags/introduce/"},{"name":"Qt","slug":"Qt","link":"/tags/Qt/"},{"name":"Env setting","slug":"Env-setting","link":"/tags/Env-setting/"}],"categories":[]}